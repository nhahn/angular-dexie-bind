/*! angular-dexie-bind - v0.0.1 - 2015-06-01
* https://github.com/nhahn/angular-dexie-bind
* Copyright (c) 2015 Nathan Hahn; Licensed MIT */
function diff(a,b){return a.filter(function(a){return b.indexOf(a)<0})}!function(){var a=angular.module("ngDexieBind",[]);a.factory("$dexieBind",["$q","$rootScope","$timeout","$log",function(a,b,c,d){var e=function(c,d,e){var f=new a.defer,g=d._ctx.table,h=function(){},i=[],j=[],k=function(){d.toArray().then(function(a){j=a,h(),h=m(j),angular.forEach(i,function(a){a.unbind()}),i=[],angular.forEach(j,function(a){i.push({id:a[g.schema.primKey.name],unbind:addCollectionWatchersToSubitemsOf(a,e,g)})}),f.resolve(j)})};k(),c.on("changes",function(a){e.apply(function(){for(var b=0;b<a.length;b++){var c=a[b];if(c.table==g.name){if(1==c.type){k();break}if(2==c.type)for(var e=0;e<j.length;e++)j[e][g.schema.primKey.name]==c.key&&(j[e]=c.obj);else if(3==c.type){if(d._ctx.limit!=1/0){k();break}for(var e=0;e<j.length;e++)j[e][g.schema.primKey.name]==c.key&&(j.splice(e,1),i[e].unbind(),i.splice(e,1))}}}})});var l=function(a){g.put(angular.copy(a)).then(function(c){angular.extend(a,c),b.$broadcast(g.name,{id:a.id,verb:"created",scope:e.$id,data:angular.copy(a)}),addCollectionWatchersToSubitemsOf(c,e,g)})["catch"](function(c){b.$broadcast(g.name,{verb:"createError",scope:e.$id,errors:c,item:angular.copy(a)}),newValues.splice(idx,1)})},m=function(a){return e.$watchCollection(function(){return a},function(a,c){var f,h;a=a||[],c=c||[],f=diff(a,c),h=diff(c,a),h.forEach(function(a){g.get(a[g.schema.primKey.name]).then(function(c){c&&(b.$broadcast(g.name,{id:a.id,verb:"destroyed",scope:e.$id}),g["delete"](a[g.schema.primKey.name]).then(function(a){d._ctx.limit==1/0&&k()}))})["catch"](function(a){console.log(a)})}),f.forEach(function(a,b){a[g.schema.primKey.name]&&g.get(a[g.schema.primKey.name]).then(function(c){c||l(a,b)})})})};return f.promise};return{bind:e}}])}(),Array.prototype.find||Object.defineProperty(Array.prototype,"find",{enumerable:!1,configurable:!0,writable:!0,value:function(a){if(null==this)throw new TypeError("Array.prototype.find called on null or undefined");if("function"!=typeof a)throw new TypeError("predicate must be a function");for(var b,c=Object(this),d=c.length>>>0,e=arguments[1],f=0;d>f;f++)if(f in c&&(b=c[f],a.call(e,b,f,c)))return b;return void 0}}),Array.isArray||(Array.isArray=function(a){return"[object Array]"===Object.prototype.toString.call(a)});